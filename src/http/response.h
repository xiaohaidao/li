// http://kb.cnblogs.com/page/92320/

#ifndef MULI_RESPONSE_H
#define MULI_RESPONSE_H

#include <map>

namespace respond {

//enum status {
//    CONTINUE = 100,
//    CHARG,
//    OK = 200,
//};

static std::map<int, std::string>  status_code = {
    // ① 客户方错误
    {100, "继续"},
    {101, "交换协议"},
    //② 成功
    {200, "OK"},
    {201, "已创建"},
    {202, "接收"},
    {203, "非认证信息"},
    {204, "无内容"},
    {205, "重置内容" },
    {206, "部分内容" },
    // ③ 重定向
    {300, "多路选择"},
    {301, "永久转移" },
    {302, "暂时转移" },
    {303, "参见其它" },
    {304, "未修改（Not Modified）" },
    {305, "使用代理" },
    // ④ 客户方错误
    {400, "错误请求（Bad Request）"},
    {401, "未认证" },
    {402, "需要付费" },
    {403, "禁止（Forbidden）" },
    {404, "未找到（Not Found）" },
    {405, "方法不允许" },
    {406, "不接受" },
    {407, "需要代理认证" },
    {408, "请求超时" },
    {409, "冲突" },
    {410, "失败" },
    {411, "需要长度" },
    {412, "条件失败" },
    {413, "请求实体太大" },
    {414, "请求URI太长" },
    {415, "不支持媒体类型" },
    // ⑤ 服务器错误
    {500, "服务器内部错误"},
    {501, "未实现（Not Implemented）" },
    {502, "网关失败" },
    {504, "网关超时" },
    {505, "HTTP版本不支持"}
};

} // namespace respond 
#endif // MULI_RESPONSE_H

